#!/bin/bash

PASTE_DIR="$HOME/.siduction-paste"
PASTE_LOG="$PASTE_DIR/siduction-paste.log"
PASTE_FILE="$(date -u +%Y%m%d%H%M%S)"
PASTE_PATH="$PASTE_DIR/$PASTE_FILE"
PASTE_HTTP="http://paste.siduction.org"
PASTE_FTP="ftp://coruja.info"
PASTE_URL="$PASTE_HTTP/$PASTE_FILE"
PASTE_USAGE="Usage: siduction-paste [-d PASTEFILE|-h|-s] [FILE|COMMAND]"

if [ ! -d $PASTE_DIR ]
then
	mkdir $HOME/.siduction-paste
	echo "$(date -u +%Y%m%d%H%M%S) I: directory $PASTE_DIR created" >> $PASTE_LOG
fi

echo "$(date -u +%Y%m%d%H%M%S) I: writing messages to logfile $PASTE_LOG" >> $PASTE_LOG
echo "$(date -u +%Y%m%d%H%M%S) I: siduction-paste started" >> $PASTE_LOG

upload () {
	curl -s -u debian:paste -T $PASTE_PATH $PASTE_FTP
	echo "$(date -u +%Y%m%d%H%M%S) I: file '$PASTE_FILE' has been uploaded to the server" >> $PASTE_LOG
	unset PASTE_PATH
	unset PASTE_FTP
	echo "Find your paste here: $PASTE_URL - Thank you for using siduction-paste!"
	unset PASTE_URL
	exit 0
}

if [ -z "$*" ]
then
	while read -t 0.1 PASTE_INPUT
	do
		echo "$PASTE_INPUT" >> $PASTE_PATH
	done
	if [ -f $PASTE_PATH ]
	then
		echo "$(date -u +%Y%m%d%H%M%S) I: output of piped input written to $PASTE_PATH" >> $PASTE_LOG
		unset PASTE_INPUT
		upload
	fi
	echo "$(date -u +%Y%m%d%H%M%S) W: no input given, displaying script usage, aborting" >> $PASTE_LOG
	echo "$PASTE_USAGE"
	exit 0
fi

delete () {
	if [ ! -f $1 ]
	then
		echo "E: The file '$1' doesn't exist, aborting."
		echo "$(date -u +%Y%m%d%H%M%S) E: The file '$1' doesn't exist, aborting." >> $PASTE_LOG
		exit 1
	fi
	PASTE_DEL="${1##*/}"
	echo "$(date -u +%Y%m%d%H%M%S) I: file '$PASTE_DEL' does exist and can be overwritten" >> $PASTE_LOG
	if [ -z "$(curl -s -l -u siduction:paste $PASTE_FTP | grep $PASTE_DEL)" ]
	then
		echo "E: The file '$PASTE_URL' doesn't exist anymore, aborting."
		echo "$(date -u +%Y%m%d%H%M%S) E: The file '$PASTE_URL' doesn't exist anymore, aborting." >> $PASTE_LOG
		exit 1
	else
		PASTE_PATH="$PASTE_DIR/$PASTE_DEL"
		unset PASTE_DIR
		echo -n "" > $PASTE_PATH
		echo "Paste file '$PASTE_PATH' has been emptied"
		echo "$(date -u +%Y%m%d%H%M%S) I: paste file '$PASTE_PATH' has been emptied" >> $PASTE_LOG
		upload
	fi
}

screenshot () {
	if [ -z "$(which "scrot")" ]
	then
		echo "E: Command 'scrot' not found. Aborting."
		echo "$(date -u +%Y%m%d%H%M%S) E: command 'scrot' not found, aborting." >> $PASTE_LOG
		echo "I: Please install the scrot package first and try again."
		exit 1
	fi
	scrot -z -d 3 $PASTE_PATH.jpg
	PASTE_FILE="$PASTE_FILE.jpg"
	PASTE_PATH="$PASTE_PATH.jpg"
	PASTE_URL="$PASTE_HTTP/$PASTE_FILE"
	upload
}

if [ "${1:0:1}"  == "-" ]
then
	case $1 in
		-d) delete $2
			;;
		-s) screenshot
			;;
		*) echo "$PASTE_USAGE"
			exit 0
			;;
	esac
fi

if [ -n "$(which "$1")" ]
then
	PASTE_INPUT="$*"
	echo "$(date -u +%Y%m%d%H%M%S) I: command entered: $PASTE_INPUT" >> $PASTE_LOG
	echo "$($PASTE_INPUT)" > $PASTE_PATH
	echo "$(date -u +%Y%m%d%H%M%S) I: output of command '$PASTE_INPUT' written to $PASTE_PATH" >> $PASTE_LOG
	upload
else
	if [ "$#" != "1" ]
	then
		echo "E: You have chosen more than one file. Aborting."
		echo "$(date -u +%Y%m%d%H%M%S) E: more than one file chosen, aborting" >> $PASTE_LOG
		echo "I: Please choose only one file to paste."
		exit 1
	fi
	PASTE_INPUT="$1"
	if [ ! -f $PASTE_INPUT ]
	then
		echo "E: The file '$PASTE_INPUT' doesn't exist. Aborting."
		echo "$(date -u +%Y%m%d%H%M%S) E: file '$PASTE_INPUT' doesn't exist, aborting." >> $PASTE_LOG
		exit 1
	fi
	echo "$(date -u +%Y%m%d%H%M%S) I: file entered: $PASTE_INPUT" >> $PASTE_LOG
	if [ -n "$(file $PASTE_INPUT | grep text)" ]
	then
		echo "$(date -u +%Y%m%d%H%M%S) I: file type of $PASTE_INPUT: text" >> $PASTE_LOG
		echo "$(cat "$PASTE_INPUT")" > $PASTE_PATH
	fi
	if [ -n "$(file $PASTE_INPUT | grep image)" ]
	then
		echo "$(date -u +%Y%m%d%H%M%S) I: file type of $PASTE_INPUT: image" >> $PASTE_LOG
		PASTE_EXT="${PASTE_INPUT##*.}"
		PASTE_FILE="$PASTE_FILE.$PASTE_EXT"
		PASTE_PATH="$PASTE_PATH.$PASTE_EXT"
		unset PASTE_EXT
		PASTE_URL="$PASTE_HTTP/$PASTE_FILE"
		cp $PASTE_INPUT $PASTE_PATH
	fi
	upload
fi

#EOF
